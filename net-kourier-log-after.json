clusterLocalVirtualHosts[ < * >
    name: "(default/hello).Rules[0]"
	domains: "hello.default"
	domains: "hello.default:*"
	domains: "hello.default.svc"
	domains: "hello.default.svc:*"
	domains: "hello.default.svc.cluster.local"
	domains: "hello.default.svc.cluster.local:*"
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
    < * >
    name: "(default/hello).Rules[1]"
	domains: "hello.default.192.168.133.2.sslip.io"
	domains: "hello.default.192.168.133.2.sslip.io:*"
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
    < * >
    name: "internalkourier"
	domains: "internalkourier"
	routes: {
		name: "gateway_ready"
		match: {
			prefix: "/ready"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "service_stats"
					weight: {
						value: 100
					}
				}
			}
			timeout: {
				seconds: 1
			}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
	typed_per_filter_config: {
		key: "envoy.filters.http.ext_authz"
		value: {
			[type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
				disabled: true
			}
		}
	}]









virtualHost < * >
    name: "(default/hello).Rules[1]"
    domains: "hello.default.192.168.133.2.sslip.io"
    domains: "hello.default.192.168.133.2.sslip.io:*"
    routes: {
        name: "(default/hello).Rules[1].Paths[/]"
        match: {
            prefix: "/"
            headers: {
                name: "K-Network-Hash"
                string_match: {
                    exact: "override"
                }
            }
        }
        route: {
            weighted_clusters: {
                clusters: {
                    name: "default/hello-00001"
                    weight: {
                        value: 100
                    }
                    request_headers_to_add: {
                        header: {
                            key: "Knative-Serving-Namespace"
                            value: "default"
                        }
                        append_action: OVERWRITE_IF_EXISTS_OR_ADD
                    }
                    request_headers_to_add: {
                        header: {
                            key: "Knative-Serving-Revision"
                            value: "hello-00001"
                        }
                        append_action: OVERWRITE_IF_EXISTS_OR_ADD
                    }
                }
            }
            timeout: {}
            upgrade_configs: {
                upgrade_type: "websocket"
                enabled: {
                    value: true
                }
            }
        }
        request_headers_to_add: {
            header: {
                key: "K-Network-Hash"
                value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
            }
            append_action: OVERWRITE_IF_EXISTS_OR_ADD
        }
    }
    routes: {
        name: "(default/hello).Rules[1].Paths[/]"
        match: {
            prefix: "/"
            headers: {
                name: "K-Network-Hash"
                string_match: {
                    exact: "override"
                }
            }
        }
        route: {
            weighted_clusters: {
                clusters: {
                    name: "default/hello-00001_cloud"
                    weight: {
                        value: 100
                    }
                    request_headers_to_add: {
                        header: {
                            key: "Knative-Serving-Revision"
                            value: "hello-00001"
                        }
                        append_action: OVERWRITE_IF_EXISTS_OR_ADD
                    }
                    request_headers_to_add: {
                        header: {
                            key: "Knative-Serving-Namespace"
                            value: "default"
                        }
                        append_action: OVERWRITE_IF_EXISTS_OR_ADD
                    }
                }
            }
            timeout: {}
            upgrade_configs: {
                upgrade_type: "websocket"
                enabled: {
                    value: true
                }
            }
        }
        request_headers_to_add: {
            header: {
                key: "K-Network-Hash"
                value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
            }
            append_action: OVERWRITE_IF_EXISTS_OR_ADD
        }
    }
    routes: {
        name: "(default/hello).Rules[1].Paths[/]"
        match: {
            prefix: "/"
        }
        route: {
            weighted_clusters: {
                clusters: {
                    name: "default/hello-00001"
                    weight: {
                        value: 100
                    }
                    request_headers_to_add: {
                        header: {
                            key: "Knative-Serving-Revision"
                            value: "hello-00001"
                        }
                        append_action: OVERWRITE_IF_EXISTS_OR_ADD
                    }
                    request_headers_to_add: {
                        header: {
                            key: "Knative-Serving-Namespace"
                            value: "default"
                        }
                        append_action: OVERWRITE_IF_EXISTS_OR_ADD
                    }
                }
            }
            timeout: {}
            upgrade_configs: {
                upgrade_type: "websocket"
                enabled: {
                    value: true
                }
            }
        }
    }
    routes: {
        name: "(default/hello).Rules[1].Paths[/]"
        match: {
            prefix: "/"
        }
        route: {
            weighted_clusters: {
                clusters: {
                    name: "default/hello-00001_cloud"
                    weight: {
                        value: 100
                    }
                    request_headers_to_add: {
                        header: {
                            key: "Knative-Serving-Namespace"
                            value: "default"
                        }
                        append_action: OVERWRITE_IF_EXISTS_OR_ADD
                    }
                    request_headers_to_add: {
                        header: {
                            key: "Knative-Serving-Revision"
                            value: "hello-00001"
                        }
                        append_action: OVERWRITE_IF_EXISTS_OR_ADD
                    }
                }
            }
            timeout: {}
            upgrade_configs: {
                upgrade_type: "websocket"
                enabled: {
                    value: true
                }
            }
        }
    }









clusterLocalVirtualHosts[ < * >
    name: "(default/hello).Rules[0]"
	domains: "hello.default"
	domains: "hello.default:*"
	domains: "hello.default.svc"
	domains: "hello.default.svc:*"
	domains: "hello.default.svc.cluster.local"
	domains: "hello.default.svc.cluster.local:*"
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	} < * >
    name: "(default/hello).Rules[0]"
	domains: "hello.default"
	domains: "hello.default:*"
	domains: "hello.default.svc"
	domains: "hello.default.svc:*"
	domains: "hello.default.svc.cluster.local"
	domains: "hello.default.svc.cluster.local:*"
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
    < * > name: "(default/hello).Rules[1]"
	domains: "hello.default.192.168.133.2.sslip.io"
	domains: "hello.default.192.168.133.2.sslip.io:*"
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
    < * >
    name: "(default/hello).Rules[1]"
	domains: "hello.default.192.168.133.2.sslip.io"
	domains: "hello.default.192.168.133.2.sslip.io:*"
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
    < * > name: "internalkourier"
	domains: "internalkourier"
	routes: {
		name: "gateway_ready"
		match: {
			prefix: "/ready"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "service_stats"
					weight: {
						value: 100
					}
				}
			}
			timeout: {
				seconds: 1
			}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
	typed_per_filter_config: {
		key: "envoy.filters.http.ext_authz"
		value: {
			[type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
				disabled: true
			}
		}
	}]









clusterLocalVirtualHostsCloud[
    < * >
    name: "(default/hello).Rules[0]"
	domains: "hello.default"
	domains: "hello.default:*"
	domains: "hello.default.svc"
	domains: "hello.default.svc:*"
	domains: "hello.default.svc.cluster.local"
	domains: "hello.default.svc.cluster.local:*"
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[0].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
    < * >
    name: "(default/hello).Rules[1]"
	domains: "hello.default.192.168.133.2.sslip.io"
	domains: "hello.default.192.168.133.2.sslip.io:*"
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
			headers: {
				name: "K-Network-Hash"
				string_match: {
					exact: "override"
				}
			}
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
		request_headers_to_add: {
			header: {
				key: "K-Network-Hash"
				value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
			}
			append_action: OVERWRITE_IF_EXISTS_OR_ADD
		}
	}
	routes: {
		name: "(default/hello).Rules[1].Paths[/]"
		match: {
			prefix: "/"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "default/hello-00001_cloud"
					weight: {
						value: 100
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Revision"
							value: "hello-00001"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
					request_headers_to_add: {
						header: {
							key: "Knative-Serving-Namespace"
							value: "default"
						}
						append_action: OVERWRITE_IF_EXISTS_OR_ADD
					}
				}
			}
			timeout: {}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	} < * > name: "internalkourier"
	domains: "internalkourier"
	routes: {
		name: "gateway_ready"
		match: {
			prefix: "/ready"
		}
		route: {
			weighted_clusters: {
				clusters: {
					name: "service_stats"
					weight: {
						value: 100
					}
				}
			}
			timeout: {
				seconds: 1
			}
			upgrade_configs: {
				upgrade_type: "websocket"
				enabled: {
					value: true
				}
			}
		}
	}
	typed_per_filter_config: {
		key: "envoy.filters.http.ext_authz"
		value: {
			[type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
				disabled: true
			}
		}
	}]









snapshot < * > {
        [{ < nil >
        } {
            1 a49d194 - 8288 - 4273 - bf8e - 2 d6d872b21ad map[
                default / hello - 00001: { < * > name: "default/hello-00001"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.102.174"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.71.37"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                default / hello - 00001 _cloud: { < * > name: "default/hello-00001_cloud"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001_cloud"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.102.174"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                default / hello - 00001 _edge: { < * > name: "default/hello-00001_edge"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001_edge"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.71.37"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }]
        } {
            1 a49d194 - 8288 - 4273 - bf8e - 2 d6d872b21ad map[
                external_services: { < * > name: "external_services"
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }
                internal_services: { < * > name: "internal_services"
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "internalkourier"
                        domains: "internalkourier"
                        routes: {
                            name: "gateway_ready"
                            match: {
                                prefix: "/ready"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "service_stats"
                                        weight: {
                                            value: 100
                                        }
                                    }
                                }
                                timeout: {
                                    seconds: 1
                                }
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        typed_per_filter_config: {
                            key: "envoy.filters.http.ext_authz"
                            value: {
                                [type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
                                    disabled: true
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }
                internal_services_cloud: { < * > name: "internal_services_cloud"
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "internalkourier"
                        domains: "internalkourier"
                        routes: {
                            name: "gateway_ready"
                            match: {
                                prefix: "/ready"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "service_stats"
                                        weight: {
                                            value: 100
                                        }
                                    }
                                }
                                timeout: {
                                    seconds: 1
                                }
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        typed_per_filter_config: {
                            key: "envoy.filters.http.ext_authz"
                            value: {
                                [type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
                                    disabled: true
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }
                internal_services_edge: { < * > name: "internal_services_edge"
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "internalkourier"
                        domains: "internalkourier"
                        routes: {
                            name: "gateway_ready"
                            match: {
                                prefix: "/ready"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "service_stats"
                                        weight: {
                                            value: 100
                                        }
                                    }
                                }
                                timeout: {
                                    seconds: 1
                                }
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        typed_per_filter_config: {
                            key: "envoy.filters.http.ext_authz"
                            value: {
                                [type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
                                    disabled: true
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }]
        } { < nil >
        } { < nil >
        } {
            1 a49d194 - 8288 - 4273 - bf8e - 2 d6d872b21ad map[
                listener_8080: { < * > name: "listener_8080"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8080
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                listener_8081: { < * > name: "listener_8081"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8081
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "internal_services_edge"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "internal_services_edge"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                listener_8090: { < * > name: "listener_8090"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8090
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }]
        } { < nil >
        } { < nil >
        } { < nil >
        } { < nil >
        }] < nil >
    }












listeners[
    < * >
    name: "listener_8080"
	address: {
		socket_address: {
			address: "0.0.0.0"
			port_value: 8080
		}
	}
	filter_chains: {
		filter_chain_match: {
			source_prefix_ranges: {
				address_prefix: "192.168.122.100"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "192.168.122.101"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.102.0"
				prefix_len: {
					value: 24
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.75.0"
				prefix_len: {
					value: 24
				}
			}
		}
		filters: {
			name: "envoy.filters.network.http_connection_manager"
			typed_config: {
				[type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
					stat_prefix: "ingress_http"
					rds: {
						config_source: {
							ads: {}
							initial_fetch_timeout: {
								seconds: 10
							}
							resource_api_version: V3
						}
						route_config_name: "external_services"
					}
					http_filters: {
						name: "envoy.filters.http.router"
						typed_config: {
							type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
						}
					}
					stream_idle_timeout: {}
					access_log: {
						name: "envoy.file_access_log"
						typed_config: {
							[type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
								path: "/dev/stdout"
							}
						}
					}
				}
			}
		}
	}
	filter_chains: {
		filter_chain_match: {
			source_prefix_ranges: {
				address_prefix: "192.168.122.102"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.71.0"
				prefix_len: {
					value: 24
				}
			}
		}
		filters: {
			name: "envoy.filters.network.http_connection_manager"
			typed_config: {
				[type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
					stat_prefix: "ingress_http"
					rds: {
						config_source: {
							ads: {}
							initial_fetch_timeout: {
								seconds: 10
							}
							resource_api_version: V3
						}
						route_config_name: "external_services"
					}
					http_filters: {
						name: "envoy.filters.http.router"
						typed_config: {
							type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
						}
					}
					stream_idle_timeout: {}
					access_log: {
						name: "envoy.file_access_log"
						typed_config: {
							[type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
								path: "/dev/stdout"
							}
						}
					}
				}
			}
		}
	}
    < * >
    name: "listener_8081"
	address: {
		socket_address: {
			address: "0.0.0.0"
			port_value: 8081
		}
	}
	filter_chains: {
		filter_chain_match: {
			source_prefix_ranges: {
				address_prefix: "192.168.122.100"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "192.168.122.101"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.102.0"
				prefix_len: {
					value: 24
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.75.0"
				prefix_len: {
					value: 24
				}
			}
		}
		filters: {
			name: "envoy.filters.network.http_connection_manager"
			typed_config: {
				[type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
					stat_prefix: "ingress_http"
					rds: {
						config_source: {
							ads: {}
							initial_fetch_timeout: {
								seconds: 10
							}
							resource_api_version: V3
						}
						route_config_name: "internal_services_cloud"
					}
					http_filters: {
						name: "envoy.filters.http.router"
						typed_config: {
							type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
						}
					}
					stream_idle_timeout: {}
					access_log: {
						name: "envoy.file_access_log"
						typed_config: {
							[type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
								path: "/dev/stdout"
							}
						}
					}
				}
			}
		}
	}
	filter_chains: {
		filter_chain_match: {
			source_prefix_ranges: {
				address_prefix: "192.168.122.102"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.71.0"
				prefix_len: {
					value: 24
				}
			}
		}
		filters: {
			name: "envoy.filters.network.http_connection_manager"
			typed_config: {
				[type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
					stat_prefix: "ingress_http"
					rds: {
						config_source: {
							ads: {}
							initial_fetch_timeout: {
								seconds: 10
							}
							resource_api_version: V3
						}
						route_config_name: "internal_services_cloud"
					}
					http_filters: {
						name: "envoy.filters.http.router"
						typed_config: {
							type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
						}
					}
					stream_idle_timeout: {}
					access_log: {
						name: "envoy.file_access_log"
						typed_config: {
							[type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
								path: "/dev/stdout"
							}
						}
					}
				}
			}
		}
	}
    < * >
    name: "listener_8081"
	address: {
		socket_address: {
			address: "0.0.0.0"
			port_value: 8081
		}
	}
	filter_chains: {
		filter_chain_match: {
			source_prefix_ranges: {
				address_prefix: "192.168.122.100"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "192.168.122.101"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.102.0"
				prefix_len: {
					value: 24
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.75.0"
				prefix_len: {
					value: 24
				}
			}
		}
		filters: {
			name: "envoy.filters.network.http_connection_manager"
			typed_config: {
				[type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
					stat_prefix: "ingress_http"
					rds: {
						config_source: {
							ads: {}
							initial_fetch_timeout: {
								seconds: 10
							}
							resource_api_version: V3
						}
						route_config_name: "internal_services_edge"
					}
					http_filters: {
						name: "envoy.filters.http.router"
						typed_config: {
							type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
						}
					}
					stream_idle_timeout: {}
					access_log: {
						name: "envoy.file_access_log"
						typed_config: {
							[type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
								path: "/dev/stdout"
							}
						}
					}
				}
			}
		}
	}
	filter_chains: {
		filter_chain_match: {
			source_prefix_ranges: {
				address_prefix: "192.168.122.102"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.71.0"
				prefix_len: {
					value: 24
				}
			}
		}
		filters: {
			name: "envoy.filters.network.http_connection_manager"
			typed_config: {
				[type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
					stat_prefix: "ingress_http"
					rds: {
						config_source: {
							ads: {}
							initial_fetch_timeout: {
								seconds: 10
							}
							resource_api_version: V3
						}
						route_config_name: "internal_services_edge"
					}
					http_filters: {
						name: "envoy.filters.http.router"
						typed_config: {
							type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
						}
					}
					stream_idle_timeout: {}
					access_log: {
						name: "envoy.file_access_log"
						typed_config: {
							[type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
								path: "/dev/stdout"
							}
						}
					}
				}
			}
		}
	}
    < * >
    name: "listener_8090"
	address: {
		socket_address: {
			address: "0.0.0.0"
			port_value: 8090
		}
	}
	filter_chains: {
		filter_chain_match: {
			source_prefix_ranges: {
				address_prefix: "192.168.122.100"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "192.168.122.101"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.102.0"
				prefix_len: {
					value: 24
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.75.0"
				prefix_len: {
					value: 24
				}
			}
		}
		filters: {
			name: "envoy.filters.network.http_connection_manager"
			typed_config: {
				[type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
					stat_prefix: "ingress_http"
					rds: {
						config_source: {
							ads: {}
							initial_fetch_timeout: {
								seconds: 10
							}
							resource_api_version: V3
						}
						route_config_name: "external_services"
					}
					http_filters: {
						name: "envoy.filters.http.router"
						typed_config: {
							type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
						}
					}
					stream_idle_timeout: {}
					access_log: {
						name: "envoy.file_access_log"
						typed_config: {
							[type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
								path: "/dev/stdout"
							}
						}
					}
				}
			}
		}
	}
	filter_chains: {
		filter_chain_match: {
			source_prefix_ranges: {
				address_prefix: "192.168.122.102"
				prefix_len: {
					value: 32
				}
			}
			source_prefix_ranges: {
				address_prefix: "10.233.71.0"
				prefix_len: {
					value: 24
				}
			}
		}
		filters: {
			name: "envoy.filters.network.http_connection_manager"
			typed_config: {
				[type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
					stat_prefix: "ingress_http"
					rds: {
						config_source: {
							ads: {}
							initial_fetch_timeout: {
								seconds: 10
							}
							resource_api_version: V3
						}
						route_config_name: "external_services"
					}
					http_filters: {
						name: "envoy.filters.http.router"
						typed_config: {
							type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
						}
					}
					stream_idle_timeout: {}
					access_log: {
						name: "envoy.file_access_log"
						typed_config: {
							[type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
								path: "/dev/stdout"
							}
						}
					}
				}
			}
		}
	}]











    snapshot < * > {
        [{ < nil >
        } {
            cab051c1 - c8bd - 48 ad - b6e2 - 14e aa4ef0891 map[
                default / hello - 00001: { < * > name: "default/hello-00001"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.102.174"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.71.37"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                default / hello - 00001 _edge: { < * > name: "default/hello-00001_edge"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001_edge"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.71.37"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                default / hello - 00001 _cloud: { < * > name: "default/hello-00001_cloud"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001_cloud"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.102.174"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }]
        } {
            cab051c1 - c8bd - 48 ad - b6e2 - 14e aa4ef0891 map[
                external_services: { < * > name: "external_services"
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }
                internal_services_cloud: { < * > name: "internal_services_cloud"
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "internalkourier"
                        domains: "internalkourier"
                        routes: {
                            name: "gateway_ready"
                            match: {
                                prefix: "/ready"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "service_stats"
                                        weight: {
                                            value: 100
                                        }
                                    }
                                }
                                timeout: {
                                    seconds: 1
                                }
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        typed_per_filter_config: {
                            key: "envoy.filters.http.ext_authz"
                            value: {
                                [type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
                                    disabled: true
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }
                internal_services_edge: { < * > name: "internal_services_edge"
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "internalkourier"
                        domains: "internalkourier"
                        routes: {
                            name: "gateway_ready"
                            match: {
                                prefix: "/ready"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "service_stats"
                                        weight: {
                                            value: 100
                                        }
                                    }
                                }
                                timeout: {
                                    seconds: 1
                                }
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        typed_per_filter_config: {
                            key: "envoy.filters.http.ext_authz"
                            value: {
                                [type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
                                    disabled: true
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }]
        } { < nil >
        } { < nil >
        } {
            cab051c1 - c8bd - 48 ad - b6e2 - 14e aa4ef0891 map[
                listener_8080: { < * > name: "listener_8080"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8080
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                listener_8081: { < * > name: "listener_8081"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8081
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "internal_services_edge"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "internal_services_edge"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                listener_8090: { < * > name: "listener_8090"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8090
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }]
        } { < nil >
        } { < nil >
        } { < nil >
        } { < nil >
        }] < nil >
    }









    _snapshot {
        42 f82c5c - 1 a6b - 4e ca - 936 a - 1920 dce2de7d map[
            listener_8080: { < * > name: "listener_8080"
                address: {
                    socket_address: {
                        address: "0.0.0.0"
                        port_value: 8080
                    }
                }
                filter_chains: {
                    filter_chain_match: {
                        source_prefix_ranges: {
                            address_prefix: "192.168.122.100"
                            prefix_len: {
                                value: 32
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "192.168.122.101"
                            prefix_len: {
                                value: 32
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "10.233.102.0"
                            prefix_len: {
                                value: 24
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "10.233.75.0"
                            prefix_len: {
                                value: 24
                            }
                        }
                    }
                    filters: {
                        name: "envoy.filters.network.http_connection_manager"
                        typed_config: {
                            [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                stat_prefix: "ingress_http"
                                rds: {
                                    config_source: {
                                        ads: {}
                                        initial_fetch_timeout: {
                                            seconds: 10
                                        }
                                        resource_api_version: V3
                                    }
                                    route_config_name: "external_services"
                                }
                                http_filters: {
                                    name: "envoy.filters.http.router"
                                    typed_config: {
                                        type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                    }
                                }
                                stream_idle_timeout: {}
                                access_log: {
                                    name: "envoy.file_access_log"
                                    typed_config: {
                                        [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                            path: "/dev/stdout"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                filter_chains: {
                    filter_chain_match: {
                        source_prefix_ranges: {
                            address_prefix: "192.168.122.102"
                            prefix_len: {
                                value: 32
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "10.233.71.0"
                            prefix_len: {
                                value: 24
                            }
                        }
                    }
                    filters: {
                        name: "envoy.filters.network.http_connection_manager"
                        typed_config: {
                            [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                stat_prefix: "ingress_http"
                                rds: {
                                    config_source: {
                                        ads: {}
                                        initial_fetch_timeout: {
                                            seconds: 10
                                        }
                                        resource_api_version: V3
                                    }
                                    route_config_name: "external_services"
                                }
                                http_filters: {
                                    name: "envoy.filters.http.router"
                                    typed_config: {
                                        type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                    }
                                }
                                stream_idle_timeout: {}
                                access_log: {
                                    name: "envoy.file_access_log"
                                    typed_config: {
                                        [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                            path: "/dev/stdout"
                                        }
                                    }
                                }
                            }
                        }
                    }
                } < nil >
            }
            listener_8081: { < * > name: "listener_8081"
                address: {
                    socket_address: {
                        address: "0.0.0.0"
                        port_value: 8081
                    }
                }
                filter_chains: {
                    filter_chain_match: {
                        source_prefix_ranges: {
                            address_prefix: "192.168.122.100"
                            prefix_len: {
                                value: 32
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "192.168.122.101"
                            prefix_len: {
                                value: 32
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "10.233.102.0"
                            prefix_len: {
                                value: 24
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "10.233.75.0"
                            prefix_len: {
                                value: 24
                            }
                        }
                    }
                    filters: {
                        name: "envoy.filters.network.http_connection_manager"
                        typed_config: {
                            [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                stat_prefix: "ingress_http"
                                rds: {
                                    config_source: {
                                        ads: {}
                                        initial_fetch_timeout: {
                                            seconds: 10
                                        }
                                        resource_api_version: V3
                                    }
                                    route_config_name: "internal_services_edge"
                                }
                                http_filters: {
                                    name: "envoy.filters.http.router"
                                    typed_config: {
                                        type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                    }
                                }
                                stream_idle_timeout: {}
                                access_log: {
                                    name: "envoy.file_access_log"
                                    typed_config: {
                                        [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                            path: "/dev/stdout"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                filter_chains: {
                    filter_chain_match: {
                        source_prefix_ranges: {
                            address_prefix: "192.168.122.102"
                            prefix_len: {
                                value: 32
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "10.233.71.0"
                            prefix_len: {
                                value: 24
                            }
                        }
                    }
                    filters: {
                        name: "envoy.filters.network.http_connection_manager"
                        typed_config: {
                            [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                stat_prefix: "ingress_http"
                                rds: {
                                    config_source: {
                                        ads: {}
                                        initial_fetch_timeout: {
                                            seconds: 10
                                        }
                                        resource_api_version: V3
                                    }
                                    route_config_name: "internal_services_edge"
                                }
                                http_filters: {
                                    name: "envoy.filters.http.router"
                                    typed_config: {
                                        type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                    }
                                }
                                stream_idle_timeout: {}
                                access_log: {
                                    name: "envoy.file_access_log"
                                    typed_config: {
                                        [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                            path: "/dev/stdout"
                                        }
                                    }
                                }
                            }
                        }
                    }
                } < nil >
            }
            listener_8090: { < * > name: "listener_8090"
                address: {
                    socket_address: {
                        address: "0.0.0.0"
                        port_value: 8090
                    }
                }
                filter_chains: {
                    filter_chain_match: {
                        source_prefix_ranges: {
                            address_prefix: "192.168.122.100"
                            prefix_len: {
                                value: 32
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "192.168.122.101"
                            prefix_len: {
                                value: 32
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "10.233.102.0"
                            prefix_len: {
                                value: 24
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "10.233.75.0"
                            prefix_len: {
                                value: 24
                            }
                        }
                    }
                    filters: {
                        name: "envoy.filters.network.http_connection_manager"
                        typed_config: {
                            [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                stat_prefix: "ingress_http"
                                rds: {
                                    config_source: {
                                        ads: {}
                                        initial_fetch_timeout: {
                                            seconds: 10
                                        }
                                        resource_api_version: V3
                                    }
                                    route_config_name: "external_services"
                                }
                                http_filters: {
                                    name: "envoy.filters.http.router"
                                    typed_config: {
                                        type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                    }
                                }
                                stream_idle_timeout: {}
                                access_log: {
                                    name: "envoy.file_access_log"
                                    typed_config: {
                                        [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                            path: "/dev/stdout"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                filter_chains: {
                    filter_chain_match: {
                        source_prefix_ranges: {
                            address_prefix: "192.168.122.102"
                            prefix_len: {
                                value: 32
                            }
                        }
                        source_prefix_ranges: {
                            address_prefix: "10.233.71.0"
                            prefix_len: {
                                value: 24
                            }
                        }
                    }
                    filters: {
                        name: "envoy.filters.network.http_connection_manager"
                        typed_config: {
                            [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                stat_prefix: "ingress_http"
                                rds: {
                                    config_source: {
                                        ads: {}
                                        initial_fetch_timeout: {
                                            seconds: 10
                                        }
                                        resource_api_version: V3
                                    }
                                    route_config_name: "external_services"
                                }
                                http_filters: {
                                    name: "envoy.filters.http.router"
                                    typed_config: {
                                        type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                    }
                                }
                                stream_idle_timeout: {}
                                access_log: {
                                    name: "envoy.file_access_log"
                                    typed_config: {
                                        [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                            path: "/dev/stdout"
                                        }
                                    }
                                }
                            }
                        }
                    }
                } < nil >
            }]
    }









    snapshot < * > {
        [{ < nil >
        } {
            55 b43836 - 4 c03 - 4602 - 929e-2 fc15ce657d6 map[
                default / hello - 00001 _cloud: { < * > name: "default/hello-00001_cloud"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001_cloud"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.102.141"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                default / hello - 00001 _edge: { < * > name: "default/hello-00001_edge"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001_edge"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.71.15"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }]
        } {
            55 b43836 - 4 c03 - 4602 - 929e-2 fc15ce657d6 map[
                external_services: { < * > name: "external_services"
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }
                internal_services_cloud: { < * > name: "internal_services_cloud"
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "internalkourier"
                        domains: "internalkourier"
                        routes: {
                            name: "gateway_ready"
                            match: {
                                prefix: "/ready"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "service_stats"
                                        weight: {
                                            value: 100
                                        }
                                    }
                                }
                                timeout: {
                                    seconds: 1
                                }
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        typed_per_filter_config: {
                            key: "envoy.filters.http.ext_authz"
                            value: {
                                [type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
                                    disabled: true
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }
                internal_services_edge: { < * > name: "internal_services_edge"
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "internalkourier"
                        domains: "internalkourier"
                        routes: {
                            name: "gateway_ready"
                            match: {
                                prefix: "/ready"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "service_stats"
                                        weight: {
                                            value: 100
                                        }
                                    }
                                }
                                timeout: {
                                    seconds: 1
                                }
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        typed_per_filter_config: {
                            key: "envoy.filters.http.ext_authz"
                            value: {
                                [type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
                                    disabled: true
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }]
        } { < nil >
        } { < nil >
        } {
            55 b43836 - 4 c03 - 4602 - 929e-2 fc15ce657d6 map[listener_8080: { < * > name: "listener_8080"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8080
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                listener_8081: { < * > name: "listener_8081"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8081
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "internal_services_edge"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "internal_services_edge"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                listener_8090: { < * > name: "listener_8090"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8090
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }]
        } { < nil >
        } { < nil >
        } { < nil >
        } { < nil >
        }] < nil >
    }









    snapshot < * > {
        [{ < nil >
        } {
            ea713545 - f89b - 4951 - a1d3 - 48928 a401c30 map[
                default / hello - 00001 _cloud: { < * > name: "default/hello-00001_cloud"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001_cloud"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.102.141"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                default / hello - 00001: { < * > name: "default/hello-00001"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.102.141"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.71.15"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                default / hello - 00001 _edge: { < * > name: "default/hello-00001_edge"
                    type: STATIC connect_timeout: {
                        seconds: 5
                    }
                    load_assignment: {
                        cluster_name: "default/hello-00001_edge"
                        endpoints: {
                            lb_endpoints: {
                                endpoint: {
                                    address: {
                                        socket_address: {
                                            address: "10.233.71.15"
                                            port_value: 8012 ipv4_compat: true
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }]
        } {
            ea713545 - f89b - 4951 - a1d3 - 48928 a401c30 map[
                external_services: { < * > name: "external_services"
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }
                internal_services_cloud: { < * > name: "internal_services_cloud"
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_cloud"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "internalkourier"
                        domains: "internalkourier"
                        routes: {
                            name: "gateway_ready"
                            match: {
                                prefix: "/ready"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "service_stats"
                                        weight: {
                                            value: 100
                                        }
                                    }
                                }
                                timeout: {
                                    seconds: 1
                                }
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        typed_per_filter_config: {
                            key: "envoy.filters.http.ext_authz"
                            value: {
                                [type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
                                    disabled: true
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }
                internal_services_edge: { < * > name: "internal_services_edge"
                    virtual_hosts: {
                        name: "(default/hello).Rules[0]"
                        domains: "hello.default"
                        domains: "hello.default:*"
                        domains: "hello.default.svc"
                        domains: "hello.default.svc:*"
                        domains: "hello.default.svc.cluster.local"
                        domains: "hello.default.svc.cluster.local:*"
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[0].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "(default/hello).Rules[1]"
                        domains: "hello.default.192.168.133.2.sslip.io"
                        domains: "hello.default.192.168.133.2.sslip.io:*"
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                                headers: {
                                    name: "K-Network-Hash"
                                    string_match: {
                                        exact: "override"
                                    }
                                }
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                            request_headers_to_add: {
                                header: {
                                    key: "K-Network-Hash"
                                    value: "17d283b7f062540769a3f2cfd9d9a8849997ae53ae26c36fdba542e732803e94"
                                }
                                append_action: OVERWRITE_IF_EXISTS_OR_ADD
                            }
                        }
                        routes: {
                            name: "(default/hello).Rules[1].Paths[/]"
                            match: {
                                prefix: "/"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "default/hello-00001_edge"
                                        weight: {
                                            value: 100
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Namespace"
                                                value: "default"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                        request_headers_to_add: {
                                            header: {
                                                key: "Knative-Serving-Revision"
                                                value: "hello-00001"
                                            }
                                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                                        }
                                    }
                                }
                                timeout: {}
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                    }
                    virtual_hosts: {
                        name: "internalkourier"
                        domains: "internalkourier"
                        routes: {
                            name: "gateway_ready"
                            match: {
                                prefix: "/ready"
                            }
                            route: {
                                weighted_clusters: {
                                    clusters: {
                                        name: "service_stats"
                                        weight: {
                                            value: 100
                                        }
                                    }
                                }
                                timeout: {
                                    seconds: 1
                                }
                                upgrade_configs: {
                                    upgrade_type: "websocket"
                                    enabled: {
                                        value: true
                                    }
                                }
                            }
                        }
                        typed_per_filter_config: {
                            key: "envoy.filters.http.ext_authz"
                            value: {
                                [type.googleapis.com / envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute]: {
                                    disabled: true
                                }
                            }
                        }
                    }
                    validate_clusters: {
                        value: true
                    } < nil >
                }]
        } { < nil >
        } { < nil >
        } {
            ea713545 - f89b - 4951 - a1d3 - 48928 a401c30 map[
                listener_8080: { < * > name: "listener_8080"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8080
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                listener_8081: { < * > name: "listener_8081"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8081
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "internal_services_cloud"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "internal_services_edge"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }
                listener_8090: { < * > name: "listener_8090"
                    address: {
                        socket_address: {
                            address: "0.0.0.0"
                            port_value: 8090
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.100"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.101"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.102.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.75.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    filter_chains: {
                        filter_chain_match: {
                            source_prefix_ranges: {
                                address_prefix: "192.168.122.102"
                                prefix_len: {
                                    value: 32
                                }
                            }
                            source_prefix_ranges: {
                                address_prefix: "10.233.71.0"
                                prefix_len: {
                                    value: 24
                                }
                            }
                        }
                        filters: {
                            name: "envoy.filters.network.http_connection_manager"
                            typed_config: {
                                [type.googleapis.com / envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]: {
                                    stat_prefix: "ingress_http"
                                    rds: {
                                        config_source: {
                                            ads: {}
                                            initial_fetch_timeout: {
                                                seconds: 10
                                            }
                                            resource_api_version: V3
                                        }
                                        route_config_name: "external_services"
                                    }
                                    http_filters: {
                                        name: "envoy.filters.http.router"
                                        typed_config: {
                                            type_url: "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                        }
                                    }
                                    stream_idle_timeout: {}
                                    access_log: {
                                        name: "envoy.file_access_log"
                                        typed_config: {
                                            [type.googleapis.com / envoy.extensions.access_loggers.file.v3.FileAccessLog]: {
                                                path: "/dev/stdout"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } < nil >
                }]
        } { < nil >
        } { < nil >
        } { < nil >
        } { < nil >
        }] < nil >
    }